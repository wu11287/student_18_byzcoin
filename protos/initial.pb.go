// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: initial.proto

//命名空间

package initial

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// message描述了一个请求或相应的消息格式，每个message类型对应pb.go文件的一个结构体
type PkAndId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pk string `protobuf:"bytes,1,opt,name=pk,proto3" json:"pk,omitempty"`
	Id int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PkAndId) Reset() {
	*x = PkAndId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_initial_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkAndId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkAndId) ProtoMessage() {}

func (x *PkAndId) ProtoReflect() protoreflect.Message {
	mi := &file_initial_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkAndId.ProtoReflect.Descriptor instead.
func (*PkAndId) Descriptor() ([]byte, []int) {
	return file_initial_proto_rawDescGZIP(), []int{0}
}

func (x *PkAndId) GetPk() string {
	if x != nil {
		return x.Pk
	}
	return ""
}

func (x *PkAndId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProofMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof string `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	Id    int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Ip    string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ProofMsg) Reset() {
	*x = ProofMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_initial_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofMsg) ProtoMessage() {}

func (x *ProofMsg) ProtoReflect() protoreflect.Message {
	mi := &file_initial_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofMsg.ProtoReflect.Descriptor instead.
func (*ProofMsg) Descriptor() ([]byte, []int) {
	return file_initial_proto_rawDescGZIP(), []int{1}
}

func (x *ProofMsg) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *ProofMsg) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProofMsg) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_initial_proto protoreflect.FileDescriptor

var file_initial_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x07, 0x50, 0x6b, 0x41, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x70, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x73, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x32, 0x7f, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x50, 0x4b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x50, 0x4b, 0x12, 0x10, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6b, 0x41,
	0x6e, 0x64, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x50,
	0x6b, 0x41, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x0a,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x11, 0x2e, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x73, 0x67, 0x1a, 0x11, 0x2e,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x73, 0x67,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_initial_proto_rawDescOnce sync.Once
	file_initial_proto_rawDescData = file_initial_proto_rawDesc
)

func file_initial_proto_rawDescGZIP() []byte {
	file_initial_proto_rawDescOnce.Do(func() {
		file_initial_proto_rawDescData = protoimpl.X.CompressGZIP(file_initial_proto_rawDescData)
	})
	return file_initial_proto_rawDescData
}

var file_initial_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_initial_proto_goTypes = []interface{}{
	(*PkAndId)(nil),  // 0: initial.PkAndId
	(*ProofMsg)(nil), // 1: initial.ProofMsg
}
var file_initial_proto_depIdxs = []int32{
	0, // 0: initial.broadPKService.broadPK:input_type -> initial.PkAndId
	1, // 1: initial.broadPKService.broadProof:input_type -> initial.ProofMsg
	0, // 2: initial.broadPKService.broadPK:output_type -> initial.PkAndId
	1, // 3: initial.broadPKService.broadProof:output_type -> initial.ProofMsg
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_initial_proto_init() }
func file_initial_proto_init() {
	if File_initial_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_initial_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkAndId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_initial_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_initial_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_initial_proto_goTypes,
		DependencyIndexes: file_initial_proto_depIdxs,
		MessageInfos:      file_initial_proto_msgTypes,
	}.Build()
	File_initial_proto = out.File
	file_initial_proto_rawDesc = nil
	file_initial_proto_goTypes = nil
	file_initial_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BroadPKServiceClient is the client API for BroadPKService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BroadPKServiceClient interface {
	BroadPK(ctx context.Context, opts ...grpc.CallOption) (BroadPKService_BroadPKClient, error)
	BroadProof(ctx context.Context, opts ...grpc.CallOption) (BroadPKService_BroadProofClient, error)
}

type broadPKServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBroadPKServiceClient(cc grpc.ClientConnInterface) BroadPKServiceClient {
	return &broadPKServiceClient{cc}
}

func (c *broadPKServiceClient) BroadPK(ctx context.Context, opts ...grpc.CallOption) (BroadPKService_BroadPKClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BroadPKService_serviceDesc.Streams[0], "/initial.broadPKService/broadPK", opts...)
	if err != nil {
		return nil, err
	}
	x := &broadPKServiceBroadPKClient{stream}
	return x, nil
}

type BroadPKService_BroadPKClient interface {
	Send(*PkAndId) error
	Recv() (*PkAndId, error)
	grpc.ClientStream
}

type broadPKServiceBroadPKClient struct {
	grpc.ClientStream
}

func (x *broadPKServiceBroadPKClient) Send(m *PkAndId) error {
	return x.ClientStream.SendMsg(m)
}

func (x *broadPKServiceBroadPKClient) Recv() (*PkAndId, error) {
	m := new(PkAndId)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *broadPKServiceClient) BroadProof(ctx context.Context, opts ...grpc.CallOption) (BroadPKService_BroadProofClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BroadPKService_serviceDesc.Streams[1], "/initial.broadPKService/broadProof", opts...)
	if err != nil {
		return nil, err
	}
	x := &broadPKServiceBroadProofClient{stream}
	return x, nil
}

type BroadPKService_BroadProofClient interface {
	Send(*ProofMsg) error
	Recv() (*ProofMsg, error)
	grpc.ClientStream
}

type broadPKServiceBroadProofClient struct {
	grpc.ClientStream
}

func (x *broadPKServiceBroadProofClient) Send(m *ProofMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *broadPKServiceBroadProofClient) Recv() (*ProofMsg, error) {
	m := new(ProofMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BroadPKServiceServer is the server API for BroadPKService service.
type BroadPKServiceServer interface {
	BroadPK(BroadPKService_BroadPKServer) error
	BroadProof(BroadPKService_BroadProofServer) error
}

// UnimplementedBroadPKServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBroadPKServiceServer struct {
}

func (*UnimplementedBroadPKServiceServer) BroadPK(BroadPKService_BroadPKServer) error {
	return status.Errorf(codes.Unimplemented, "method BroadPK not implemented")
}
func (*UnimplementedBroadPKServiceServer) BroadProof(BroadPKService_BroadProofServer) error {
	return status.Errorf(codes.Unimplemented, "method BroadProof not implemented")
}

func RegisterBroadPKServiceServer(s *grpc.Server, srv BroadPKServiceServer) {
	s.RegisterService(&_BroadPKService_serviceDesc, srv)
}

func _BroadPKService_BroadPK_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BroadPKServiceServer).BroadPK(&broadPKServiceBroadPKServer{stream})
}

type BroadPKService_BroadPKServer interface {
	Send(*PkAndId) error
	Recv() (*PkAndId, error)
	grpc.ServerStream
}

type broadPKServiceBroadPKServer struct {
	grpc.ServerStream
}

func (x *broadPKServiceBroadPKServer) Send(m *PkAndId) error {
	return x.ServerStream.SendMsg(m)
}

func (x *broadPKServiceBroadPKServer) Recv() (*PkAndId, error) {
	m := new(PkAndId)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BroadPKService_BroadProof_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BroadPKServiceServer).BroadProof(&broadPKServiceBroadProofServer{stream})
}

type BroadPKService_BroadProofServer interface {
	Send(*ProofMsg) error
	Recv() (*ProofMsg, error)
	grpc.ServerStream
}

type broadPKServiceBroadProofServer struct {
	grpc.ServerStream
}

func (x *broadPKServiceBroadProofServer) Send(m *ProofMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *broadPKServiceBroadProofServer) Recv() (*ProofMsg, error) {
	m := new(ProofMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BroadPKService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "initial.broadPKService",
	HandlerType: (*BroadPKServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "broadPK",
			Handler:       _BroadPKService_BroadPK_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "broadProof",
			Handler:       _BroadPKService_BroadProof_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "initial.proto",
}
